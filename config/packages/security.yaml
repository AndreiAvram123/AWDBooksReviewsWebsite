security:

    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
         app_user_provider:
             entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
      ROLE_ADMIN: [ ROLE_ADMIN , ROLE_MODERATOR, ROLE_USER]
      ROLE_MODERATOR: [ROLE_MODERATOR, ROLE_USER]
      ROLE_USER : [ROLE_USER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false



        login:
           pattern: ^/api/v1/login
           stateless: true
           json_login:
              check_path: /api/v1/login
              success_handler: lexik_jwt_authentication.handler.authentication_success
              failure_handler: lexik_jwt_authentication.handler.authentication_failure


        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        main:
            lazy: true
            provider: app_user_provider

            form_login:
               login_path: login_path
               check_path: login_path
               enable_csrf: true

            logout:
               path: logout
               target: home


    access_control:
         - { path: ^/api/v1/token, roles: PUBLIC_ACCESS }
         - { path: ^/api/v1/login, roles: PUBLIC_ACCESS }
         - { path: ^/api/v1/register, roles: PUBLIC_ACCESS }
         - { path: ^/api/v1/books/search, roles: PUBLIC_ACCESS }
         - { path: ^/api/v1/search, roles: PUBLIC_ACCESS }
         - { path: ^/api/v1,       roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/admin/*, roles: ROLE_ADMIN }
         - { path: ^/moderator/*, roles : ROLE_MODERATOR}
         - { path: ^/reviews/create, roles: ROLE_USER }
         - { path: ^/reviews/\d+/edit, roles: ROLE_USER }
         - { path: ^/books/create, roles: ROLE_USER }


